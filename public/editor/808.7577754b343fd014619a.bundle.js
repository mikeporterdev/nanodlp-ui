"use strict";(self.webpackChunknanosupport=self.webpackChunknanosupport||[]).push([[808],{4808:(e,t,r)=>{r.r(t),r.d(t,{FBXLoader:()=>p});var n=r(7749),o=r(6488);function s(e,t,r){const n=r.length-e-1;if(t>=r[n])return n-1;if(t<=r[e])return e;let o=e,s=n,a=Math.floor((o+s)/2);for(;t<r[a]||t>=r[a+1];)t<r[a]?s=a:o=a,a=Math.floor((o+s)/2);return a}function a(e,t){let r=1;for(let t=2;t<=e;++t)r*=t;let n=1;for(let e=2;e<=t;++e)n*=e;for(let r=2;r<=e-t;++r)n*=r;return r/n}class i extends n.Curve{constructor(e,t,r,o,s){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=o||0,this.endKnot=s||this.knots.length-1;for(let e=0;e<r.length;++e){const t=r[e];this.controlPoints[e]=new n.Vector4(t.x,t.y,t.z,t.w)}}getPoint(e,t=new n.Vector3){const r=t,o=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),a=function(e,t,r,o){const a=s(e,o,t),i=function(e,t,r,n){const o=[],s=[],a=[];o[0]=1;for(let i=1;i<=r;++i){s[i]=t-n[e+1-i],a[i]=n[e+i]-t;let r=0;for(let e=0;e<i;++e){const t=a[e+1],n=s[i-e],l=o[e]/(t+n);o[e]=r+t*l,r=n*l}o[i]=r}return o}(a,o,e,t),l=new n.Vector4(0,0,0,0);for(let t=0;t<=e;++t){const n=r[a-e+t],o=i[t],s=n.w*o;l.x+=n.x*s,l.y+=n.y*s,l.z+=n.z*s,l.w+=n.w*o}return l}(this.degree,this.knots,this.controlPoints,o);return 1!==a.w&&a.divideScalar(a.w),r.set(a.x,a.y,a.z)}getTangent(e,t=new n.Vector3){const r=t,o=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),i=function(e,t,r,o,i){const l=function(e,t,r,o,a){const i=a<e?a:e,l=[],c=s(e,o,t),u=function(e,t,r,n,o){const s=[];for(let e=0;e<=r;++e)s[e]=0;const a=[];for(let e=0;e<=n;++e)a[e]=s.slice(0);const i=[];for(let e=0;e<=r;++e)i[e]=s.slice(0);i[0][0]=1;const l=s.slice(0),c=s.slice(0);for(let n=1;n<=r;++n){l[n]=t-o[e+1-n],c[n]=o[e+n]-t;let r=0;for(let e=0;e<n;++e){const t=c[e+1],o=l[n-e];i[n][e]=t+o;const s=i[e][n-1]/i[n][e];i[e][n]=r+t*s,r=o*s}i[n][n]=r}for(let e=0;e<=r;++e)a[0][e]=i[e][r];for(let e=0;e<=r;++e){let t=0,o=1;const l=[];for(let e=0;e<=r;++e)l[e]=s.slice(0);l[0][0]=1;for(let s=1;s<=n;++s){let n=0;const c=e-s,u=r-s;e>=s&&(l[o][0]=l[t][0]/i[u+1][c],n=l[o][0]*i[c][u]);const p=e-1<=u?s-1:r-e;for(let e=c>=-1?1:-c;e<=p;++e)l[o][e]=(l[t][e]-l[t][e-1])/i[u+1][c+e],n+=l[o][e]*i[c+e][u];e<=u&&(l[o][s]=-l[t][s-1]/i[u+1][e],n+=l[o][s]*i[e][u]),a[s][e]=n;const h=t;t=o,o=h}}let u=r;for(let e=1;e<=n;++e){for(let t=0;t<=r;++t)a[e][t]*=u;u*=r-e}return a}(c,o,e,i,t),p=[];for(let e=0;e<r.length;++e){const t=r[e].clone(),n=t.w;t.x*=n,t.y*=n,t.z*=n,p[e]=t}for(let t=0;t<=i;++t){const r=p[c-e].clone().multiplyScalar(u[t][0]);for(let n=1;n<=e;++n)r.add(p[c-e+n].clone().multiplyScalar(u[t][n]));l[t]=r}for(let e=i+1;e<=a+1;++e)l[e]=new n.Vector4(0,0,0);return l}(e,t,r,o,i);return function(e){const t=e.length,r=[],o=[];for(let s=0;s<t;++s){const t=e[s];r[s]=new n.Vector3(t.x,t.y,t.z),o[s]=t.w}const s=[];for(let e=0;e<t;++e){const t=r[e].clone();for(let r=1;r<=e;++r)t.sub(s[e-r].clone().multiplyScalar(a(e,r)*o[r]));s[e]=t.divideScalar(o[0])}return s}(l)}(this.degree,this.knots,this.controlPoints,o,1);return r.copy(i[1]).normalize(),r}}let l,c,u;class p extends n.Loader{constructor(e){super(e)}load(e,t,r,o){const s=this,a=""===s.path?n.LoaderUtils.extractUrlBase(e):s.path,i=new n.FileLoader(this.manager);i.setPath(s.path),i.setResponseType("arraybuffer"),i.setRequestHeader(s.requestHeader),i.setWithCredentials(s.withCredentials),i.load(e,(function(r){try{t(s.parse(r,a))}catch(t){o?o(t):console.error(t),s.manager.itemError(e)}}),r,o)}parse(e,t){if(function(e){const t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===D(e,0,t.length)}(e))l=(new g).parse(e);else{const t=D(e);if(!function(e){const t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let r=0;function n(t){const n=e[t-1];return e=e.slice(r+t),r++,n}for(let e=0;e<t.length;++e)if(n(1)===t[e])return!1;return!0}(t))throw new Error("THREE.FBXLoader: Unknown format.");if(w(t)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+w(t));l=(new m).parse(t)}const r=new n.TextureLoader(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new h(r,this.manager).parse(l)}}class h{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){c=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),r=this.parseMaterials(t),n=this.parseDeformers(),o=(new d).parse(n);return this.parseScene(n,o,r),u}parseConnections(){const e=new Map;return"Connections"in l&&l.Connections.connections.forEach((function(t){const r=t[0],n=t[1],o=t[2];e.has(r)||e.set(r,{parents:[],children:[]});const s={ID:n,relationship:o};e.get(r).parents.push(s),e.has(n)||e.set(n,{parents:[],children:[]});const a={ID:r,relationship:o};e.get(n).children.push(a)})),e}parseImages(){const e={},t={};if("Video"in l.Objects){const r=l.Objects.Video;for(const n in r){const o=r[n];if(e[parseInt(n)]=o.RelativeFilename||o.Filename,"Content"in o){const e=o.Content instanceof ArrayBuffer&&o.Content.byteLength>0,s="string"==typeof o.Content&&""!==o.Content;if(e||s){const e=this.parseImage(r[n]);t[o.RelativeFilename||o.Filename]=e}}}}for(const r in e){const n=e[r];void 0!==t[n]?e[r]=t[n]:e[r]=e[r].split("\\").pop()}return e}parseImage(e){const t=e.Content,r=e.RelativeFilename||e.Filename,n=r.slice(r.lastIndexOf(".")+1).toLowerCase();let o;switch(n){case"bmp":o="image/bmp";break;case"jpg":case"jpeg":o="image/jpeg";break;case"png":o="image/png";break;case"tif":o="image/tiff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",r),o="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+n+'" is not supported.')}if("string"==typeof t)return"data:"+o+";base64,"+t;{const e=new Uint8Array(t);return window.URL.createObjectURL(new Blob([e],{type:o}))}}parseTextures(e){const t=new Map;if("Texture"in l.Objects){const r=l.Objects.Texture;for(const n in r){const o=this.parseTexture(r[n],e);t.set(parseInt(n),o)}}return t}parseTexture(e,t){const r=this.loadTexture(e,t);r.ID=e.id,r.name=e.attrName;const o=e.WrapModeU,s=e.WrapModeV,a=void 0!==o?o.value:0,i=void 0!==s?s.value:0;if(r.wrapS=0===a?n.RepeatWrapping:n.ClampToEdgeWrapping,r.wrapT=0===i?n.RepeatWrapping:n.ClampToEdgeWrapping,"Scaling"in e){const t=e.Scaling.value;r.repeat.x=t[0],r.repeat.y=t[1]}if("Translation"in e){const t=e.Translation.value;r.offset.x=t[0],r.offset.y=t[1]}return r}loadTexture(e,t){let r;const o=this.textureLoader.path,s=c.get(e.id).children;let a;void 0!==s&&s.length>0&&void 0!==t[s[0].ID]&&(r=t[s[0].ID],0!==r.indexOf("blob:")&&0!==r.indexOf("data:")||this.textureLoader.setPath(void 0));const i=e.FileName.slice(-3).toLowerCase();if("tga"===i){const t=this.manager.getHandler(".tga");null===t?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),a=new n.Texture):(t.setPath(this.textureLoader.path),a=t.load(r))}else"psd"===i?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),a=new n.Texture):a=this.textureLoader.load(r);return this.textureLoader.setPath(o),a}parseMaterials(e){const t=new Map;if("Material"in l.Objects){const r=l.Objects.Material;for(const n in r){const o=this.parseMaterial(r[n],e);null!==o&&t.set(parseInt(n),o)}}return t}parseMaterial(e,t){const r=e.id,o=e.attrName;let s=e.ShadingModel;if("object"==typeof s&&(s=s.value),!c.has(r))return null;const a=this.parseParameters(e,t,r);let i;switch(s.toLowerCase()){case"phong":i=new n.MeshPhongMaterial;break;case"lambert":i=new n.MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),i=new n.MeshPhongMaterial}return i.setValues(a),i.name=o,i}parseParameters(e,t,r){const o={};e.BumpFactor&&(o.bumpScale=e.BumpFactor.value),e.Diffuse?o.color=(new n.Color).fromArray(e.Diffuse.value):!e.DiffuseColor||"Color"!==e.DiffuseColor.type&&"ColorRGB"!==e.DiffuseColor.type||(o.color=(new n.Color).fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(o.displacementScale=e.DisplacementFactor.value),e.Emissive?o.emissive=(new n.Color).fromArray(e.Emissive.value):!e.EmissiveColor||"Color"!==e.EmissiveColor.type&&"ColorRGB"!==e.EmissiveColor.type||(o.emissive=(new n.Color).fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(o.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(o.opacity=parseFloat(e.Opacity.value)),o.opacity<1&&(o.transparent=!0),e.ReflectionFactor&&(o.reflectivity=e.ReflectionFactor.value),e.Shininess&&(o.shininess=e.Shininess.value),e.Specular?o.specular=(new n.Color).fromArray(e.Specular.value):e.SpecularColor&&"Color"===e.SpecularColor.type&&(o.specular=(new n.Color).fromArray(e.SpecularColor.value));const s=this;return c.get(r).children.forEach((function(e){const r=e.relationship;switch(r){case"Bump":o.bumpMap=s.getTexture(t,e.ID);break;case"Maya|TEX_ao_map":o.aoMap=s.getTexture(t,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":o.map=s.getTexture(t,e.ID),void 0!==o.map&&(o.map.encoding=n.sRGBEncoding);break;case"DisplacementColor":o.displacementMap=s.getTexture(t,e.ID);break;case"EmissiveColor":o.emissiveMap=s.getTexture(t,e.ID),void 0!==o.emissiveMap&&(o.emissiveMap.encoding=n.sRGBEncoding);break;case"NormalMap":case"Maya|TEX_normal_map":o.normalMap=s.getTexture(t,e.ID);break;case"ReflectionColor":o.envMap=s.getTexture(t,e.ID),void 0!==o.envMap&&(o.envMap.mapping=n.EquirectangularReflectionMapping,o.envMap.encoding=n.sRGBEncoding);break;case"SpecularColor":o.specularMap=s.getTexture(t,e.ID),void 0!==o.specularMap&&(o.specularMap.encoding=n.sRGBEncoding);break;case"TransparentColor":case"TransparencyFactor":o.alphaMap=s.getTexture(t,e.ID),o.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",r)}})),o}getTexture(e,t){return"LayeredTexture"in l.Objects&&t in l.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=c.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in l.Objects){const r=l.Objects.Deformer;for(const n in r){const o=r[n],s=c.get(parseInt(n));if("Skin"===o.attrType){const t=this.parseSkeleton(s,r);t.ID=n,s.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),t.geometryID=s.parents[0].ID,e[n]=t}else if("BlendShape"===o.attrType){const e={id:n};e.rawTargets=this.parseMorphTargets(s,r),e.id=n,s.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[n]=e}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const r=[];return e.children.forEach((function(e){const o=t[e.ID];if("Cluster"!==o.attrType)return;const s={ID:e.ID,indices:[],weights:[],transformLink:(new n.Matrix4).fromArray(o.TransformLink.a)};"Indexes"in o&&(s.indices=o.Indexes.a,s.weights=o.Weights.a),r.push(s)})),{rawBones:r,bones:[]}}parseMorphTargets(e,t){const r=[];for(let n=0;n<e.children.length;n++){const o=e.children[n],s=t[o.ID],a={name:s.attrName,initialWeight:s.DeformPercent,id:s.id,fullWeights:s.FullWeights.a};if("BlendShapeChannel"!==s.attrType)return;a.geoID=c.get(parseInt(o.ID)).children.filter((function(e){return void 0===e.relationship}))[0].ID,r.push(a)}return r}parseScene(e,t,r){u=new n.Group;const o=this.parseModels(e.skeletons,t,r),s=l.Objects.Model,a=this;o.forEach((function(e){const t=s[e.ID];a.setLookAtProperties(e,t),c.get(e.ID).parents.forEach((function(t){const r=o.get(t.ID);void 0!==r&&r.add(e)})),null===e.parent&&u.add(e)})),this.bindSkeleton(e.skeletons,t,o),this.createAmbientLight(),u.traverse((function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrix=e.parent.matrix,e.userData.transformData.parentMatrixWorld=e.parent.matrixWorld);const t=M(e.userData.transformData);e.applyMatrix4(t),e.updateWorldMatrix()}}));const i=(new f).parse();1===u.children.length&&u.children[0].isGroup&&(u.children[0].animations=i,u=u.children[0]),u.animations=i}parseModels(e,t,r){const o=new Map,s=l.Objects.Model;for(const a in s){const i=parseInt(a),l=s[a],u=c.get(i);let p=this.buildSkeleton(u,e,i,l.attrName);if(!p){switch(l.attrType){case"Camera":p=this.createCamera(u);break;case"Light":p=this.createLight(u);break;case"Mesh":p=this.createMesh(u,t,r);break;case"NurbsCurve":p=this.createCurve(u,t);break;case"LimbNode":case"Root":p=new n.Bone;break;default:p=new n.Group}p.name=l.attrName?n.PropertyBinding.sanitizeNodeName(l.attrName):"",p.ID=i}this.getTransformData(p,l),o.set(i,p)}return o}buildSkeleton(e,t,r,o){let s=null;return e.parents.forEach((function(e){for(const a in t){const i=t[a];i.rawBones.forEach((function(t,a){if(t.ID===e.ID){const e=s;s=new n.Bone,s.matrixWorld.copy(t.transformLink),s.name=o?n.PropertyBinding.sanitizeNodeName(o):"",s.ID=r,i.bones[a]=s,null!==e&&s.add(e)}}))}})),s}createCamera(e){let t,r;if(e.children.forEach((function(e){const t=l.Objects.NodeAttribute[e.ID];void 0!==t&&(r=t)})),void 0===r)t=new n.Object3D;else{let e=0;void 0!==r.CameraProjectionType&&1===r.CameraProjectionType.value&&(e=1);let o=1;void 0!==r.NearPlane&&(o=r.NearPlane.value/1e3);let s=1e3;void 0!==r.FarPlane&&(s=r.FarPlane.value/1e3);let a=window.innerWidth,i=window.innerHeight;void 0!==r.AspectWidth&&void 0!==r.AspectHeight&&(a=r.AspectWidth.value,i=r.AspectHeight.value);const l=a/i;let c=45;void 0!==r.FieldOfView&&(c=r.FieldOfView.value);const u=r.FocalLength?r.FocalLength.value:null;switch(e){case 0:t=new n.PerspectiveCamera(c,l,o,s),null!==u&&t.setFocalLength(u);break;case 1:t=new n.OrthographicCamera(-a/2,a/2,i/2,-i/2,o,s);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+e+"."),t=new n.Object3D}}return t}createLight(e){let t,r;if(e.children.forEach((function(e){const t=l.Objects.NodeAttribute[e.ID];void 0!==t&&(r=t)})),void 0===r)t=new n.Object3D;else{let e;e=void 0===r.LightType?0:r.LightType.value;let o=16777215;void 0!==r.Color&&(o=(new n.Color).fromArray(r.Color.value));let s=void 0===r.Intensity?1:r.Intensity.value/100;void 0!==r.CastLightOnObject&&0===r.CastLightOnObject.value&&(s=0);let a=0;void 0!==r.FarAttenuationEnd&&(a=void 0!==r.EnableFarAttenuation&&0===r.EnableFarAttenuation.value?0:r.FarAttenuationEnd.value);const i=1;switch(e){case 0:t=new n.PointLight(o,s,a,i);break;case 1:t=new n.DirectionalLight(o,s);break;case 2:let e=Math.PI/3;void 0!==r.InnerAngle&&(e=n.MathUtils.degToRad(r.InnerAngle.value));let l=0;void 0!==r.OuterAngle&&(l=n.MathUtils.degToRad(r.OuterAngle.value),l=Math.max(l,1)),t=new n.SpotLight(o,s,a,e,l,i);break;default:console.warn("THREE.FBXLoader: Unknown light type "+r.LightType.value+", defaulting to a PointLight."),t=new n.PointLight(o,s)}void 0!==r.CastShadows&&1===r.CastShadows.value&&(t.castShadow=!0)}return t}createMesh(e,t,r){let o,s=null,a=null;const i=[];return e.children.forEach((function(e){t.has(e.ID)&&(s=t.get(e.ID)),r.has(e.ID)&&i.push(r.get(e.ID))})),i.length>1?a=i:i.length>0?a=i[0]:(a=new n.MeshPhongMaterial({color:13421772}),i.push(a)),"color"in s.attributes&&i.forEach((function(e){e.vertexColors=!0})),s.FBX_Deformer?(o=new n.SkinnedMesh(s,a),o.normalizeSkinWeights()):o=new n.Mesh(s,a),o}createCurve(e,t){const r=e.children.reduce((function(e,r){return t.has(r.ID)&&(e=t.get(r.ID)),e}),null),o=new n.LineBasicMaterial({color:3342591,linewidth:1});return new n.Line(r,o)}getTransformData(e,t){const r={};"InheritType"in t&&(r.inheritType=parseInt(t.InheritType.value)),r.eulerOrder="RotationOrder"in t?A(t.RotationOrder.value):"ZYX","Lcl_Translation"in t&&(r.translation=t.Lcl_Translation.value),"PreRotation"in t&&(r.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(r.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(r.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(r.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(r.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(r.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(r.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(r.rotationPivot=t.RotationPivot.value),e.userData.transformData=r}setLookAtProperties(e,t){"LookAtProperty"in t&&c.get(e.ID).children.forEach((function(t){if("LookAtProperty"===t.relationship){const r=l.Objects.Model[t.ID];if("Lcl_Translation"in r){const t=r.Lcl_Translation.value;void 0!==e.target?(e.target.position.fromArray(t),u.add(e.target)):e.lookAt((new n.Vector3).fromArray(t))}}}))}bindSkeleton(e,t,r){const o=this.parsePoseNodes();for(const s in e){const a=e[s];c.get(parseInt(a.ID)).parents.forEach((function(e){if(t.has(e.ID)){const t=e.ID;c.get(t).parents.forEach((function(e){r.has(e.ID)&&r.get(e.ID).bind(new n.Skeleton(a.bones),o[e.ID])}))}}))}}parsePoseNodes(){const e={};if("Pose"in l.Objects){const t=l.Objects.Pose;for(const r in t)if("BindPose"===t[r].attrType&&t[r].NbPoseNodes>0){const o=t[r].PoseNode;Array.isArray(o)?o.forEach((function(t){e[t.Node]=(new n.Matrix4).fromArray(t.Matrix.a)})):e[o.Node]=(new n.Matrix4).fromArray(o.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in l&&"AmbientColor"in l.GlobalSettings){const e=l.GlobalSettings.AmbientColor.value,t=e[0],r=e[1],o=e[2];if(0!==t||0!==r||0!==o){const e=new n.Color(t,r,o);u.add(new n.AmbientLight(e,1))}}}}class d{parse(e){const t=new Map;if("Geometry"in l.Objects){const r=l.Objects.Geometry;for(const n in r){const o=c.get(parseInt(n)),s=this.parseGeometry(o,r[n],e);t.set(parseInt(n),s)}}return t}parseGeometry(e,t,r){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,r);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,r){const n=r.skeletons,o=[],s=e.parents.map((function(e){return l.Objects.Model[e.ID]}));if(0===s.length)return;const a=e.children.reduce((function(e,t){return void 0!==n[t.ID]&&(e=n[t.ID]),e}),null);e.children.forEach((function(e){void 0!==r.morphTargets[e.ID]&&o.push(r.morphTargets[e.ID])}));const i=s[0],c={};"RotationOrder"in i&&(c.eulerOrder=A(i.RotationOrder.value)),"InheritType"in i&&(c.inheritType=parseInt(i.InheritType.value)),"GeometricTranslation"in i&&(c.translation=i.GeometricTranslation.value),"GeometricRotation"in i&&(c.rotation=i.GeometricRotation.value),"GeometricScaling"in i&&(c.scale=i.GeometricScaling.value);const u=M(c);return this.genGeometry(t,a,o,u)}genGeometry(e,t,r,o){const s=new n.BufferGeometry;e.attrName&&(s.name=e.attrName);const a=this.parseGeoNode(e,t),i=this.genBuffers(a),l=new n.Float32BufferAttribute(i.vertex,3);if(l.applyMatrix4(o),s.setAttribute("position",l),i.colors.length>0&&s.setAttribute("color",new n.Float32BufferAttribute(i.colors,3)),t&&(s.setAttribute("skinIndex",new n.Uint16BufferAttribute(i.weightsIndices,4)),s.setAttribute("skinWeight",new n.Float32BufferAttribute(i.vertexWeights,4)),s.FBX_Deformer=t),i.normal.length>0){const e=(new n.Matrix3).getNormalMatrix(o),t=new n.Float32BufferAttribute(i.normal,3);t.applyNormalMatrix(e),s.setAttribute("normal",t)}if(i.uvs.forEach((function(e,t){let r="uv"+(t+1).toString();0===t&&(r="uv"),s.setAttribute(r,new n.Float32BufferAttribute(i.uvs[t],2))})),a.material&&"AllSame"!==a.material.mappingType){let e=i.materialIndex[0],t=0;if(i.materialIndex.forEach((function(r,n){r!==e&&(s.addGroup(t,n-t,e),e=r,t=n)})),s.groups.length>0){const t=s.groups[s.groups.length-1],r=t.start+t.count;r!==i.materialIndex.length&&s.addGroup(r,i.materialIndex.length-r,e)}0===s.groups.length&&s.addGroup(0,i.materialIndex.length,i.materialIndex[0])}return this.addMorphTargets(s,e,r,o),s}parseGeoNode(e,t){const r={};if(r.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],r.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(r.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(r.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(r.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){r.uv=[];let t=0;for(;e.LayerElementUV[t];)e.LayerElementUV[t].UV&&r.uv.push(this.parseUVs(e.LayerElementUV[t])),t++}return r.weightTable={},null!==t&&(r.skeleton=t,t.rawBones.forEach((function(e,t){e.indices.forEach((function(n,o){void 0===r.weightTable[n]&&(r.weightTable[n]=[]),r.weightTable[n].push({id:t,weight:e.weights[o]})}))}))),r}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let r=0,n=0,o=!1,s=[],a=[],i=[],l=[],c=[],u=[];const p=this;return e.vertexIndices.forEach((function(h,d){let f,m=!1;h<0&&(h^=-1,m=!0);let g=[],y=[];if(s.push(3*h,3*h+1,3*h+2),e.color){const t=b(d,r,h,e.color);i.push(t[0],t[1],t[2])}if(e.skeleton){if(void 0!==e.weightTable[h]&&e.weightTable[h].forEach((function(e){y.push(e.weight),g.push(e.id)})),y.length>4){o||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),o=!0);const e=[0,0,0,0],t=[0,0,0,0];y.forEach((function(r,n){let o=r,s=g[n];t.forEach((function(t,r,n){if(o>t){n[r]=o,o=t;const a=e[r];e[r]=s,s=a}}))})),g=e,y=t}for(;y.length<4;)y.push(0),g.push(0);for(let e=0;e<4;++e)c.push(y[e]),u.push(g[e])}if(e.normal){const t=b(d,r,h,e.normal);a.push(t[0],t[1],t[2])}e.material&&"AllSame"!==e.material.mappingType&&(f=b(d,r,h,e.material)[0]),e.uv&&e.uv.forEach((function(e,t){const n=b(d,r,h,e);void 0===l[t]&&(l[t]=[]),l[t].push(n[0]),l[t].push(n[1])})),n++,m&&(p.genFace(t,e,s,f,a,i,l,c,u,n),r++,n=0,s=[],a=[],i=[],l=[],c=[],u=[])})),t}genFace(e,t,r,n,o,s,a,i,l,c){for(let u=2;u<c;u++)e.vertex.push(t.vertexPositions[r[0]]),e.vertex.push(t.vertexPositions[r[1]]),e.vertex.push(t.vertexPositions[r[2]]),e.vertex.push(t.vertexPositions[r[3*(u-1)]]),e.vertex.push(t.vertexPositions[r[3*(u-1)+1]]),e.vertex.push(t.vertexPositions[r[3*(u-1)+2]]),e.vertex.push(t.vertexPositions[r[3*u]]),e.vertex.push(t.vertexPositions[r[3*u+1]]),e.vertex.push(t.vertexPositions[r[3*u+2]]),t.skeleton&&(e.vertexWeights.push(i[0]),e.vertexWeights.push(i[1]),e.vertexWeights.push(i[2]),e.vertexWeights.push(i[3]),e.vertexWeights.push(i[4*(u-1)]),e.vertexWeights.push(i[4*(u-1)+1]),e.vertexWeights.push(i[4*(u-1)+2]),e.vertexWeights.push(i[4*(u-1)+3]),e.vertexWeights.push(i[4*u]),e.vertexWeights.push(i[4*u+1]),e.vertexWeights.push(i[4*u+2]),e.vertexWeights.push(i[4*u+3]),e.weightsIndices.push(l[0]),e.weightsIndices.push(l[1]),e.weightsIndices.push(l[2]),e.weightsIndices.push(l[3]),e.weightsIndices.push(l[4*(u-1)]),e.weightsIndices.push(l[4*(u-1)+1]),e.weightsIndices.push(l[4*(u-1)+2]),e.weightsIndices.push(l[4*(u-1)+3]),e.weightsIndices.push(l[4*u]),e.weightsIndices.push(l[4*u+1]),e.weightsIndices.push(l[4*u+2]),e.weightsIndices.push(l[4*u+3])),t.color&&(e.colors.push(s[0]),e.colors.push(s[1]),e.colors.push(s[2]),e.colors.push(s[3*(u-1)]),e.colors.push(s[3*(u-1)+1]),e.colors.push(s[3*(u-1)+2]),e.colors.push(s[3*u]),e.colors.push(s[3*u+1]),e.colors.push(s[3*u+2])),t.material&&"AllSame"!==t.material.mappingType&&(e.materialIndex.push(n),e.materialIndex.push(n),e.materialIndex.push(n)),t.normal&&(e.normal.push(o[0]),e.normal.push(o[1]),e.normal.push(o[2]),e.normal.push(o[3*(u-1)]),e.normal.push(o[3*(u-1)+1]),e.normal.push(o[3*(u-1)+2]),e.normal.push(o[3*u]),e.normal.push(o[3*u+1]),e.normal.push(o[3*u+2])),t.uv&&t.uv.forEach((function(t,r){void 0===e.uvs[r]&&(e.uvs[r]=[]),e.uvs[r].push(a[r][0]),e.uvs[r].push(a[r][1]),e.uvs[r].push(a[r][2*(u-1)]),e.uvs[r].push(a[r][2*(u-1)+1]),e.uvs[r].push(a[r][2*u]),e.uvs[r].push(a[r][2*u+1])}))}addMorphTargets(e,t,r,n){if(0===r.length)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const o=this;r.forEach((function(r){r.rawTargets.forEach((function(r){const s=l.Objects.Geometry[r.geoID];void 0!==s&&o.genMorphGeometry(e,t,s,n,r.name)}))}))}genMorphGeometry(e,t,r,o,s){const a=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],i=void 0!==r.Vertices?r.Vertices.a:[],l=void 0!==r.Indexes?r.Indexes.a:[],c=3*e.attributes.position.count,u=new Float32Array(c);for(let e=0;e<l.length;e++){const t=3*l[e];u[t]=i[3*e],u[t+1]=i[3*e+1],u[t+2]=i[3*e+2]}const p={vertexIndices:a,vertexPositions:u},h=this.genBuffers(p),d=new n.Float32BufferAttribute(h.vertex,3);d.name=s||r.attrName,d.applyMatrix4(o),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,r=e.ReferenceInformationType,n=e.Normals.a;let o=[];return"IndexToDirect"===r&&("NormalIndex"in e?o=e.NormalIndex.a:"NormalsIndex"in e&&(o=e.NormalsIndex.a)),{dataSize:3,buffer:n,indices:o,mappingType:t,referenceType:r}}parseUVs(e){const t=e.MappingInformationType,r=e.ReferenceInformationType,n=e.UV.a;let o=[];return"IndexToDirect"===r&&(o=e.UVIndex.a),{dataSize:2,buffer:n,indices:o,mappingType:t,referenceType:r}}parseVertexColors(e){const t=e.MappingInformationType,r=e.ReferenceInformationType,n=e.Colors.a;let o=[];return"IndexToDirect"===r&&(o=e.ColorIndex.a),{dataSize:4,buffer:n,indices:o,mappingType:t,referenceType:r}}parseMaterialIndices(e){const t=e.MappingInformationType,r=e.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:r};const n=e.Materials.a,o=[];for(let e=0;e<n.length;++e)o.push(e);return{dataSize:1,buffer:n,indices:o,mappingType:t,referenceType:r}}parseNurbsGeometry(e){if(void 0===i)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new n.BufferGeometry;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new n.BufferGeometry;const r=t-1,o=e.KnotVector.a,s=[],a=e.Points.a;for(let e=0,t=a.length;e<t;e+=4)s.push((new n.Vector4).fromArray(a,e));let l,c;if("Closed"===e.Form)s.push(s[0]);else if("Periodic"===e.Form){l=r,c=o.length-1-l;for(let e=0;e<r;++e)s.push(s[e])}const u=new i(r,o,s,l,c).getPoints(12*s.length);return(new n.BufferGeometry).setFromPoints(u)}}class f{parse(){const e=[],t=this.parseClips();if(void 0!==t)for(const r in t){const n=t[r],o=this.addClip(n);e.push(o)}return e}parseClips(){if(void 0===l.Objects.AnimationCurve)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=l.Objects.AnimationCurveNode,t=new Map;for(const r in e){const n=e[r];if(null!==n.attrName.match(/S|R|T|DeformPercent/)){const e={id:n.id,attr:n.attrName,curves:{}};t.set(e.id,e)}}return t}parseAnimationCurves(e){const t=l.Objects.AnimationCurve;for(const r in t){const n={id:t[r].id,times:t[r].KeyTime.a.map(x),values:t[r].KeyValueFloat.a},o=c.get(n.id);if(void 0!==o){const t=o.parents[0].ID,r=o.parents[0].relationship;r.match(/X/)?e.get(t).curves.x=n:r.match(/Y/)?e.get(t).curves.y=n:r.match(/Z/)?e.get(t).curves.z=n:r.match(/d|DeformPercent/)&&e.has(t)&&(e.get(t).curves.morph=n)}}}parseAnimationLayers(e){const t=l.Objects.AnimationLayer,r=new Map;for(const o in t){const t=[],s=c.get(parseInt(o));void 0!==s&&(s.children.forEach((function(r,o){if(e.has(r.ID)){const s=e.get(r.ID);if(void 0!==s.curves.x||void 0!==s.curves.y||void 0!==s.curves.z){if(void 0===t[o]){const e=c.get(r.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID;if(void 0!==e){const s=l.Objects.Model[e.toString()];if(void 0===s)return void console.warn("THREE.FBXLoader: Encountered a unused curve.",r);const a={modelName:s.attrName?n.PropertyBinding.sanitizeNodeName(s.attrName):"",ID:s.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};u.traverse((function(e){e.ID===s.id&&(a.transform=e.matrix,e.userData.transformData&&(a.eulerOrder=e.userData.transformData.eulerOrder))})),a.transform||(a.transform=new n.Matrix4),"PreRotation"in s&&(a.preRotation=s.PreRotation.value),"PostRotation"in s&&(a.postRotation=s.PostRotation.value),t[o]=a}}t[o]&&(t[o][s.attr]=s)}else if(void 0!==s.curves.morph){if(void 0===t[o]){const e=c.get(r.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID,s=c.get(e).parents[0].ID,a=c.get(s).parents[0].ID,i=c.get(a).parents[0].ID,u=l.Objects.Model[i],p={modelName:u.attrName?n.PropertyBinding.sanitizeNodeName(u.attrName):"",morphName:l.Objects.Deformer[e].attrName};t[o]=p}t[o][s.attr]=s}}})),r.set(parseInt(o),t))}return r}parseAnimStacks(e){const t=l.Objects.AnimationStack,r={};for(const n in t){const o=c.get(parseInt(n)).children;o.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const s=e.get(o[0].ID);r[n]={name:t[n].attrName,layer:s}}return r}addClip(e){let t=[];const r=this;return e.layer.forEach((function(e){t=t.concat(r.generateTracks(e))})),new n.AnimationClip(e.name,-1,t)}generateTracks(e){const t=[];let r=new n.Vector3,o=new n.Quaternion,s=new n.Vector3;if(e.transform&&e.transform.decompose(r,o,s),r=r.toArray(),o=(new n.Euler).setFromQuaternion(o,e.eulerOrder).toArray(),s=s.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){const n=this.generateVectorTrack(e.modelName,e.T.curves,r,"position");void 0!==n&&t.push(n)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){const r=this.generateRotationTrack(e.modelName,e.R.curves,o,e.preRotation,e.postRotation,e.eulerOrder);void 0!==r&&t.push(r)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){const r=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");void 0!==r&&t.push(r)}if(void 0!==e.DeformPercent){const r=this.generateMorphTrack(e);void 0!==r&&t.push(r)}return t}generateVectorTrack(e,t,r,o){const s=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(s,t,r);return new n.VectorKeyframeTrack(e+"."+o,s,a)}generateRotationTrack(e,t,r,o,s,a){void 0!==t.x&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(n.MathUtils.degToRad)),void 0!==t.y&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(n.MathUtils.degToRad)),void 0!==t.z&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(n.MathUtils.degToRad));const i=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(i,t,r);void 0!==o&&((o=o.map(n.MathUtils.degToRad)).push(a),o=(new n.Euler).fromArray(o),o=(new n.Quaternion).setFromEuler(o)),void 0!==s&&((s=s.map(n.MathUtils.degToRad)).push(a),s=(new n.Euler).fromArray(s),s=(new n.Quaternion).setFromEuler(s).invert());const c=new n.Quaternion,u=new n.Euler,p=[];for(let e=0;e<l.length;e+=3)u.set(l[e],l[e+1],l[e+2],a),c.setFromEuler(u),void 0!==o&&c.premultiply(o),void 0!==s&&c.multiply(s),c.toArray(p,e/3*4);return new n.QuaternionKeyframeTrack(e+".quaternion",i,p)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,r=t.values.map((function(e){return e/100})),o=u.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new n.NumberKeyframeTrack(e.modelName+".morphTargetInfluences["+o+"]",t.times,r)}getTimesForAllAxes(e){let t=[];if(void 0!==e.x&&(t=t.concat(e.x.times)),void 0!==e.y&&(t=t.concat(e.y.times)),void 0!==e.z&&(t=t.concat(e.z.times)),t=t.sort((function(e,t){return e-t})),t.length>1){let e=1,r=t[0];for(let n=1;n<t.length;n++){const o=t[n];o!==r&&(t[e]=o,r=o,e++)}t=t.slice(0,e)}return t}getKeyframeTrackValues(e,t,r){const n=r,o=[];let s=-1,a=-1,i=-1;return e.forEach((function(e){if(t.x&&(s=t.x.times.indexOf(e)),t.y&&(a=t.y.times.indexOf(e)),t.z&&(i=t.z.times.indexOf(e)),-1!==s){const e=t.x.values[s];o.push(e),n[0]=e}else o.push(n[0]);if(-1!==a){const e=t.y.values[a];o.push(e),n[1]=e}else o.push(n[1]);if(-1!==i){const e=t.z.values[i];o.push(e),n[2]=e}else o.push(n[2])})),o}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const r=e.values[t-1],n=e.values[t]-r,o=Math.abs(n);if(o>=180){const s=o/180,a=n/s;let i=r+a;const l=e.times[t-1],c=(e.times[t]-l)/s;let u=l+c;const p=[],h=[];for(;u<e.times[t];)p.push(u),u+=c,h.push(i),i+=a;e.times=L(e.times,t,p),e.values=L(e.values,t,h)}}}}class m{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new v,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,r=e.split(/[\r\n]+/);return r.forEach((function(e,n){const o=e.match(/^[\s\t]*;/),s=e.match(/^[\s\t]*$/);if(o||s)return;const a=e.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),i=e.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),l=e.match("^\\t{"+(t.currentIndent-1)+"}}");a?t.parseNodeBegin(e,a):i?t.parseNodeProperty(e,i,r[++n]):l?t.popStack():e.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(e)})),this.allNodes}parseNodeBegin(e,t){const r=t[1].trim().replace(/^"/,"").replace(/"$/,""),n=t[2].split(",").map((function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")})),o={name:r},s=this.parseNodeAttr(n),a=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(r,o):r in a?("PoseNode"===r?a.PoseNode.push(o):void 0!==a[r].id&&(a[r]={},a[r][a[r].id]=a[r]),""!==s.id&&(a[r][s.id]=o)):"number"==typeof s.id?(a[r]={},a[r][s.id]=o):"Properties70"!==r&&(a[r]="PoseNode"===r?[o]:o),"number"==typeof s.id&&(o.id=s.id),""!==s.name&&(o.attrName=s.name),""!==s.type&&(o.attrType=s.type),this.pushStack(o)}parseNodeAttr(e){let t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let r="",n="";return e.length>1&&(r=e[1].replace(/^(\w+)::/,""),n=e[2]),{id:t,name:r,type:n}}parseNodeProperty(e,t,r){let n=t[1].replace(/^"/,"").replace(/"$/,"").trim(),o=t[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===n&&","===o&&(o=r.replace(/"/g,"").replace(/,$/,"").trim());const s=this.getCurrentNode();if("Properties70"!==s.name){if("C"===n){const e=o.split(",").slice(1),t=parseInt(e[0]),r=parseInt(e[1]);let a=o.split(",").slice(3);a=a.map((function(e){return e.trim().replace(/^"/,"")})),n="connections",o=[t,r],function(e,t){for(let r=0,n=e.length,o=t.length;r<o;r++,n++)e[n]=t[r]}(o,a),void 0===s[n]&&(s[n]=[])}"Node"===n&&(s.id=o),n in s&&Array.isArray(s[n])?s[n].push(o):"a"!==n?s[n]=o:s.a=o,this.setCurrentProp(s,n),"a"===n&&","!==o.slice(-1)&&(s.a=P(o))}else this.parseNodeSpecialProperty(e,n,o)}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,","!==e.slice(-1)&&(t.a=P(t.a))}parseNodeSpecialProperty(e,t,r){const n=r.split('",').map((function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")})),o=n[0],s=n[1],a=n[2],i=n[3];let l=n[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":l=parseFloat(l);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":l=P(l)}this.getPrevNode()[o]={type:s,type2:a,flag:i,value:l},this.setCurrentProp(this.getPrevNode(),o)}}class g{parse(e){const t=new y(e);t.skip(23);const r=t.getUint32();if(r<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+r);const n=new v;for(;!this.endOfContent(t);){const e=this.parseNode(t,r);null!==e&&n.add(e.name,e)}return n}endOfContent(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const r={},n=t>=7500?e.getUint64():e.getUint32(),o=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const s=e.getUint8(),a=e.getString(s);if(0===n)return null;const i=[];for(let t=0;t<o;t++)i.push(this.parseProperty(e));const l=i.length>0?i[0]:"",c=i.length>1?i[1]:"",u=i.length>2?i[2]:"";for(r.singleProperty=1===o&&e.getOffset()===n;n>e.getOffset();){const n=this.parseNode(e,t);null!==n&&this.parseSubNode(a,r,n)}return r.propertyList=i,"number"==typeof l&&(r.id=l),""!==c&&(r.attrName=c),""!==u&&(r.attrType=u),""!==a&&(r.name=a),r}parseSubNode(e,t,r){if(!0===r.singleProperty){const e=r.propertyList[0];Array.isArray(e)?(t[r.name]=r,r.a=e):t[r.name]=e}else if("Connections"===e&&"C"===r.name){const e=[];r.propertyList.forEach((function(t,r){0!==r&&e.push(t)})),void 0===t.connections&&(t.connections=[]),t.connections.push(e)}else if("Properties70"===r.name)Object.keys(r).forEach((function(e){t[e]=r[e]}));else if("Properties70"===e&&"P"===r.name){let e=r.propertyList[0],n=r.propertyList[1];const o=r.propertyList[2],s=r.propertyList[3];let a;0===e.indexOf("Lcl ")&&(e=e.replace("Lcl ","Lcl_")),0===n.indexOf("Lcl ")&&(n=n.replace("Lcl ","Lcl_")),a="Color"===n||"ColorRGB"===n||"Vector"===n||"Vector3D"===n||0===n.indexOf("Lcl_")?[r.propertyList[4],r.propertyList[5],r.propertyList[6]]:r.propertyList[4],t[e]={type:n,type2:o,flag:s,value:a}}else void 0===t[r.name]?"number"==typeof r.id?(t[r.name]={},t[r.name][r.id]=r):t[r.name]=r:"PoseNode"===r.name?(Array.isArray(t[r.name])||(t[r.name]=[t[r.name]]),t[r.name].push(r)):void 0===t[r.name][r.id]&&(t[r.name][r.id]=r)}parseProperty(e){const t=e.getString(1);let r;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return r=e.getUint32(),e.getArrayBuffer(r);case"S":return r=e.getUint32(),e.getString(r);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const n=e.getUint32(),s=e.getUint32(),a=e.getUint32();if(0===s)switch(t){case"b":case"c":return e.getBooleanArray(n);case"d":return e.getFloat64Array(n);case"f":return e.getFloat32Array(n);case"i":return e.getInt32Array(n);case"l":return e.getInt64Array(n)}void 0===o&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const i=o.unzlibSync(new Uint8Array(e.getArrayBuffer(a))),l=new y(i.buffer);switch(t){case"b":case"c":return l.getBooleanArray(n);case"d":return l.getFloat64Array(n);case"f":return l.getFloat32Array(n);case"i":return l.getInt32Array(n);case"l":return l.getInt64Array(n)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class y{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return 1==(1&this.getUint8())}getBooleanArray(e){const t=[];for(let r=0;r<e;r++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e}getInt64Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let r=0;r<e;r++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let r=0;r<e;r++)t[r]=this.getUint8();const r=t.indexOf(0);return r>=0&&(t=t.slice(0,r)),n.LoaderUtils.decodeText(new Uint8Array(t))}}class v{add(e,t){this[e]=t}}function w(e){const t=e.match(/FBXVersion: (\d+)/);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function x(e){return e/46186158e3}const I=[];function b(e,t,r,n){let o;switch(n.mappingType){case"ByPolygonVertex":o=e;break;case"ByPolygon":o=t;break;case"ByVertice":o=r;break;case"AllSame":o=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}"IndexToDirect"===n.referenceType&&(o=n.indices[o]);const s=o*n.dataSize,a=s+n.dataSize;return function(e,t,r,n){for(let o=r,s=0;o<n;o++,s++)e[s]=t[o];return e}(I,n.buffer,s,a)}const T=new n.Euler,E=new n.Vector3;function M(e){const t=new n.Matrix4,r=new n.Matrix4,o=new n.Matrix4,s=new n.Matrix4,a=new n.Matrix4,i=new n.Matrix4,l=new n.Matrix4,c=new n.Matrix4,u=new n.Matrix4,p=new n.Matrix4,h=new n.Matrix4,d=new n.Matrix4,f=e.inheritType?e.inheritType:0;if(e.translation&&t.setPosition(E.fromArray(e.translation)),e.preRotation){const t=e.preRotation.map(n.MathUtils.degToRad);t.push(e.eulerOrder),r.makeRotationFromEuler(T.fromArray(t))}if(e.rotation){const t=e.rotation.map(n.MathUtils.degToRad);t.push(e.eulerOrder),o.makeRotationFromEuler(T.fromArray(t))}if(e.postRotation){const t=e.postRotation.map(n.MathUtils.degToRad);t.push(e.eulerOrder),s.makeRotationFromEuler(T.fromArray(t)),s.invert()}e.scale&&a.scale(E.fromArray(e.scale)),e.scalingOffset&&l.setPosition(E.fromArray(e.scalingOffset)),e.scalingPivot&&i.setPosition(E.fromArray(e.scalingPivot)),e.rotationOffset&&c.setPosition(E.fromArray(e.rotationOffset)),e.rotationPivot&&u.setPosition(E.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(h.copy(e.parentMatrix),p.copy(e.parentMatrixWorld));const m=r.clone().multiply(o).multiply(s),g=new n.Matrix4;g.extractRotation(p);const y=new n.Matrix4;y.copyPosition(p);const v=y.clone().invert().multiply(p),w=g.clone().invert().multiply(v),x=a,I=new n.Matrix4;if(0===f)I.copy(g).multiply(m).multiply(w).multiply(x);else if(1===f)I.copy(g).multiply(w).multiply(m).multiply(x);else{const e=(new n.Matrix4).scale((new n.Vector3).setFromMatrixScale(h)).clone().invert(),t=w.clone().multiply(e);I.copy(g).multiply(m).multiply(t).multiply(x)}const b=u.clone().invert(),M=i.clone().invert();let A=t.clone().multiply(c).multiply(u).multiply(r).multiply(o).multiply(s).multiply(b).multiply(l).multiply(i).multiply(a).multiply(M);const P=(new n.Matrix4).copyPosition(A),D=p.clone().multiply(P);return d.copyPosition(D),A=d.clone().multiply(I),A.premultiply(p.invert()),A}function A(e){const t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(e=e||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[e]}function P(e){return e.split(",").map((function(e){return parseFloat(e)}))}function D(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=e.byteLength),n.LoaderUtils.decodeText(new Uint8Array(e,t,r))}function L(e,t,r){return e.slice(0,t).concat(r).concat(e.slice(t))}}}]);